<!doctype html>
<html
  class="no-js{% if request.design_mode %} shopify-design-mode{% endif %}"
  lang="{{ request.locale.iso_code }}"
>
  <head>
    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {% comment %} This a way to wait for main content to load when navigating to a new page so that the view transitions can work consistently {% endcomment %}
    <link
      rel="expect"
      href="#MainContent"
      blocking="render"
      id="view-transition-render-blocker"
    >

    {%- render 'meta-tags' -%}
    {%- render 'fonts' -%}
    {%- render 'scripts' -%}
    {%- render 'theme-styles-variables' -%}
    {%- render 'color-schemes' -%}

    {% if request.design_mode %}
      {%- render 'theme-editor' -%}
    {% endif %}

    {{ content_for_header }}

    <style>
      .auto-login-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        text-align: center;
        padding: 2rem;
      }

      .auto-login-heading {
        font-size: 2rem;
        font-weight: 600;
        margin-bottom: 2rem;
        background: linear-gradient(45deg, #fe149a, #7a5bd3, #22a4f1);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
      }

      .spinning-triangle {
        width: 60px;
        height: 60px;
        margin-bottom: 2rem;
        animation: spin 1.5s linear infinite;
      }

      .spinning-triangle svg {
        width: 100%;
        height: 100%;
        fill: url(#theme-gradient);
      }

      .spinning-triangle svg defs {
        position: absolute;
      }

      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      .loading-dots {
        display: inline-block;
        animation: dots 1.5s infinite;
      }

      @keyframes dots {
        0%, 20% {
          content: "";
        }
        40% {
          content: ".";
        }
        60% {
          content: "..";
        }
        80%, 100% {
          content: "...";
        }
      }

      .loading-dots::after {
        content: "";
        animation: dots 1.5s infinite;
      }

      .hidden {
        display: none !important;
      }
    </style>
  </head>

  <body class="page-width-{{ settings.page_width }}">
    <!-- Auto-login loading screen -->
    <div id="auto-login-screen" class="auto-login-container">
      <div class="spinning-triangle">
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <linearGradient id="theme-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" style="stop-color:#fe149a;stop-opacity:1" />
              <stop offset="50%" style="stop-color:#7a5bd3;stop-opacity:1" />
              <stop offset="100%" style="stop-color:#22a4f1;stop-opacity:1" />
            </linearGradient>
          </defs>
          <polygon points="50,10 90,90 10,90" fill="url(#theme-gradient)"/>
        </svg>
      </div>
      <h1 class="auto-login-heading">
        Getting you in<span class="loading-dots"></span>
      </h1>
    </div>

    <!-- Original password content (hidden initially) -->
    <div id="password-content" class="hidden">
      <main
        id="MainContent"
        class="content-for-layout"
        role="main"
      >
        {{ content_for_layout }}
      </main>

      <div class="password-enter">
        <p class="password-enter__powered-by">
          {{ 'content.powered_by' | t }}
          <a
            href="//shopify.com"
            rel="nofollow"
            target="_blank"
            aria-label="Shopify"
            aria-describedby="a11y-new-window-message"
          >
            {{- 'icon-shopify.svg' | inline_asset_content -}}
          </a>
        </p>
        <div class="password-enter__links">
          <button
            class="button-unstyled password-enter__button"
            on:click="#password-form/showDialog"
          >
            {{ 'actions.enter_using_password' | t }}
          </button>
          <p class="password-enter__admin-link">
            {{ 'content.store_owner_link_html' | t: link: '/admin' }}
          </p>
        </div>
        <ul hidden>
          <li id="a11y-new-window-message">{{ 'accessibility.new_window' | t }}</li>
        </ul>
      </div>

      {%- form 'storefront_password' -%}
        <dialog-component id="password-form">
          <dialog
            ref="dialog"
            class="password-dialog"
            {% if form.errors %}
              open
            {% endif %}
          >
            <div class="password-dialog__header">
              <button
                class="button-unstyled password-dialog__close-button"
                on:click="dialog-component/closeDialog"
                type="button"
              >
                <span
                  class="svg-wrapper svg-wrapper--small"
                  title="{{ 'actions.close' | t }}"
                >
                  {{ 'icon-close.svg' | inline_asset_content }}
                </span>
              </button>
            </div>
            <div class="password-dialog__content">
              <h3 class="password-dialog__title">
                {{ 'actions.enter_password' | t }}
              </h3>

              <div class="email-signup__input-group">
                <label
                  for="Password"
                  class="visually-hidden"
                >
                  {{ 'actions.enter_password' | t }}
                </label>

                <input
                  type="password"
                  name="password"
                  id="Password"
                  class="field__input field__input--button-radius field__input--button-padding"
                  autocomplete="current-password"
                  {% if form.errors %}
                    aria-invalid="true"
                    aria-describedby="PasswordLoginForm-password-error"
                  {%- endif -%}
                  placeholder="{{ 'placeholders.password' | t }}"
                  autofocus
                >

                <button
                  class="button password-dialog__submit-button"
                  type="submit"
                >
                  {{ 'actions.submit' | t }}
                </button>
              </div>

              {%- if form.errors -%}
                <div
                  id="PasswordLoginForm-password-error"
                  class="email-signup__message email-signup__message--error"
                  tabindex="-1"
                >
                  <svg
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                    focusable="false"
                    aria-hidden="true"
                    class="icon-error"
                  >
                    {%- render 'icon', icon: 'error'  -%}
                  </svg>
                  {{ 'content.wrong_password' | t }}
                </div>
              {%- endif -%}
            </div>
          </dialog>
        </dialog-component>
      {%- endform -%}
    </div>

    {% # theme-check-disable ParserBlockingScript %}
    <script src="{{ 'critical.js' | asset_url }}"></script>
    {% # theme-check-enable ParserBlockingScript %}

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Auto-login functionality
        function autoLogin() {
          const passwordInput = document.getElementById('Password');
          const submitButton = document.querySelector('.password-dialog__submit-button');
          const passwordForm = document.querySelector('form[action*="password"]');
          
          if (passwordInput && submitButton) {
            // Fill the password field
            passwordInput.value = 'german';
            
            // Trigger input event to ensure the form recognizes the value
            passwordInput.dispatchEvent(new Event('input', { bubbles: true }));
            
            // Small delay to ensure the form is ready
            setTimeout(() => {
              // Submit the form
              if (passwordForm) {
                passwordForm.submit();
              } else {
                submitButton.click();
              }
            }, 500);
          } else {
            // If form elements aren't found, show the password content after a delay
            setTimeout(() => {
              document.getElementById('auto-login-screen').classList.add('hidden');
              document.getElementById('password-content').classList.remove('hidden');
            }, 2000);
          }
        }

        // Check if we're in design mode (don't auto-login in theme editor)
        if (!document.body.classList.contains('shopify-design-mode')) {
          // Start auto-login process after a short delay
          setTimeout(autoLogin, 1500);
        } else {
          // In design mode, show the password content immediately
          document.getElementById('auto-login-screen').classList.add('hidden');
          document.getElementById('password-content').classList.remove('hidden');
        }
      });
    </script>
  </body>
</html> 